{"version":3,"file":"js/812.901b657c.js","mappings":"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","sources":["webpack://DOUJI.AI/./node_modules/linkify-it/index.js","webpack://DOUJI.AI/./node_modules/linkify-it/lib/re.js","webpack://DOUJI.AI/./node_modules/markdown-it/index.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/common/entities.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/common/html_re.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/common/utils.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/helpers/index.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/index.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/parser_block.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/parser_core.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/parser_inline.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/presets/default.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/presets/zero.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/renderer.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/ruler.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/code.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/list.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_block/table.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/block.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_core/text_join.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://DOUJI.AI/./node_modules/markdown-it/lib/token.js","webpack://DOUJI.AI/./node_modules/mdurl/decode.js","webpack://DOUJI.AI/./node_modules/mdurl/encode.js","webpack://DOUJI.AI/./node_modules/mdurl/format.js","webpack://DOUJI.AI/./node_modules/mdurl/index.js","webpack://DOUJI.AI/./node_modules/mdurl/parse.js","webpack://DOUJI.AI/./node_modules/punycode/punycode.es6.js","webpack://DOUJI.AI/./node_modules/uc.micro/categories/Cc/regex.js","webpack://DOUJI.AI/./node_modules/uc.micro/categories/Cf/regex.js","webpack://DOUJI.AI/./node_modules/uc.micro/categories/P/regex.js","webpack://DOUJI.AI/./node_modules/uc.micro/categories/Z/regex.js","webpack://DOUJI.AI/./node_modules/uc.micro/index.js","webpack://DOUJI.AI/./node_modules/uc.micro/properties/Any/regex.js"],"sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code, level,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i, prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i, prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  oldBMarks  = [];\n  oldBSCount = [];\n  oldSCount  = [];\n  oldTShift  = [];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ nextLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ nextLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = match[0];\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isString","isObject","isRegExp","isFunction","escapeRE","str","replace","require","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","add","definition","set","m","ml","me","len","next","tld_pos","at_pos","exec","testSchemaAt","search","indexOf","result","matchAtStart","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","TypeError","arrayReplaceAt","src","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","charCodeAt","parseInt","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib","mdurl","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","ok","lines","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","prevLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","parentType","bsCount","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","curr","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","ch1","ch2","origStr","escapedStr","isLetter","lc","linkLevel","labelStart","ref","parseReference","SCHEME_RE","proto","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","decodeCache","getDecodeCache","exclude","string","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","codePoints","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z"],"sourceRoot":""}